# Generated by Django 4.2.2 on 2023-06-29 15:06

from django.db import migrations, models
import django.db.models.deletion
import misc.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('text', models.TextField()),
                ('operators', models.ManyToManyField(blank=True, default=None, related_name='broadcasts', to='clients.operator')),
                ('tags', models.ManyToManyField(blank=True, default=None, related_name='broadcasts', to='clients.tag')),
            ],
            options={
                'verbose_name': 'Broadcast',
                'verbose_name_plural': 'broadcasts',
            },
            bases=(models.Model, misc.db.models.CreateUpdateTracker),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=255)),
                ('response', models.TextField(blank=True, default=None, editable=False, null=True)),
                ('broadcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='broadcasts.broadcast')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='clients.client')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'messages',
            },
            bases=(models.Model, misc.db.models.CreateUpdateTracker),
        ),
    ]
