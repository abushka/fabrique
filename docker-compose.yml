version: "3.9"


x-app-common: &app-common
  image: registry.anttek.io/abushka/notification-service/django:${TAG:-latest}
  environment:
    - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
    - REDIS_URL=redis://redis:6379
    - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
    - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-}
    - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-}
    - JWT_ACCESS_TOKEN_LIFETIME=${JWT_ACCESS_TOKEN_LIFETIME:-}
    - JWT_REFRESH_TOKEN_LIFETIME=${JWT_REFRESH_TOKEN_LIFETIME:-}
    - PROBE_URL=${PROBE_URL:-}
    - PROBE_TOKEN=${PROBE_TOKEN:-}
  user: root
  volumes:
    - .:/app
    - /app/static
    - /app/media
    - static:/app/static
    - media:/app/media


services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 5s
      timeout: 1s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 1s
      retries: 10
    volumes:
      - redis_data:/data
  django:
    <<: *app-common
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -O /dev/null http://localhost:8000/health || exit 1" ]
      interval: 5s
      timeout: 1s
      retries: 10
    ports:
      - ${WEB_PORT:-8000}:8000
  celery:
    <<: *app-common
    command: -A core worker -l debug --concurrency 1 -P solo -E
    depends_on:
      redis:
        condition: service_healthy
    entrypoint: celery
    healthcheck:
      test: [ "CMD-SHELL", "celery", "-A", "core", "inspect", "ping" ]
      interval: 5s
      timeout: 1s
      retries: 10
  celery-beat:
    <<: *app-common
    command: -A core beat -l debug
    depends_on:
      postgres:
        condition: service_healthy
      celery:
        condition: service_healthy
    entrypoint: celery
    healthcheck:
      test: [ "CMD-SHELL", "celery", "-A", "core", "status" ]
      interval: 5s
      timeout: 1s
      retries: 10


volumes:
  postgres_data:
  redis_data:
  static:
  media:
